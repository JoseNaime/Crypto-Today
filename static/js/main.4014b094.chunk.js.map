{"version":3,"sources":["Components/PaginationButtons.jsx","Components/Pagination.jsx","App.js","index.js"],"names":["PaginationButtons","dataLength","pageSize","pageOffset","currentPage","handlePageChange","pageButtons","Array","Math","floor","fill","map","pageNo","i","className","onClick","e","Pagination","data","updateDate","useState","setCurrentPage","updateDateFormatted","Date","toLocaleString","dataElements","_data","auxMarketCapUsd","Intl","NumberFormat","format","parseFloat","priceUsd","toFixed","auxChangePercent24Hr","changePercent24Hr","id","rank","symbol","name","slice","length","val","initialState","fetchUrl","isLoading","errors","reducer","state","action","type","Error","App","useReducer","dispatch","res","setRes","useEffect","a","config","method","baseURL","axios","request","_res","url","href","target","timestamp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4014b094.chunk.js","sourcesContent":["import React from 'react';\n\nfunction PaginationButtons({dataLength, pageSize, pageOffset, currentPage, handlePageChange}) {\n    const pageButtons = Array(Math.floor(dataLength / pageSize)).fill(0)\n        .map((pageNo, i) => {\n            pageNo = i + pageOffset\n            return (\n                <button\n                    className={\"pagination-button \" + (currentPage === i && \"active\")}\n                    onClick={(e) => handlePageChange(e, i)}>{pageNo}\n                </button>\n            )\n        })\n\n    return (\n        <section className=\"pagination-button-container\">\n            <div className=\"left\">\n                {(currentPage !== 0) && <button onClick={(e) => handlePageChange(e, currentPage - 1)}>{'<'}</button>}\n            </div>\n            <div className=\"center\">\n                <ul>\n                    {pageButtons}\n                </ul>\n            </div>\n            <div className=\"right\">\n                {(currentPage < (dataLength / pageSize) - 1) &&\n                <button onClick={(e) => handlePageChange(e, currentPage + 1)}>{'>'}</button>}\n            </div>\n        </section>\n    );\n}\n\nexport default PaginationButtons;","import React, {useState} from 'react';\nimport PaginationButtons from \"./PaginationButtons\";\n\nfunction Pagination({data, updateDate, pageSize, pageOffset}) {\n    const [currentPage, setCurrentPage] = useState(0);\n\n    const handlePageChange = (e, val) => {\n        setCurrentPage(val);\n    }\n\n    const updateDateFormatted = new Date(updateDate).toLocaleString()\n    const dataElements = data.map(_data => {\n        const dollarUSLocale = Intl.NumberFormat('en-US');\n        const auxMarketCapUsd = dollarUSLocale.format(parseFloat(_data.priceUsd).toFixed(2));\n\n        const auxChangePercent24Hr = parseFloat(_data.changePercent24Hr).toFixed(4)\n\n        return (\n            <li id={_data.id} className=\"crypto-list-item\">\n                <div className=\"crypto-list-item__info\">\n                    <h3 className=\"rank\">{_data.rank}</h3>\n                    <p className=\"symbol\"><b>{_data.symbol}</b></p>\n                    <small className=\"name\">{_data.name}</small>\n                    <p className=\"market-cap\">USD ${auxMarketCapUsd}</p>\n                </div>\n                <div>\n\n                    <p className={\"crypto-list-item__change \" + (auxChangePercent24Hr < 0 && \"fall\")}>{auxChangePercent24Hr}%</p>\n                </div>\n            </li>\n        )\n    })\n\n    return (\n        <div id=\"pagination\">\n            <ul id=\"crypto-list-container\">\n                <small className=\"update-date\">{updateDateFormatted}</small>\n                {dataElements.slice(currentPage * pageSize, currentPage * pageSize + pageSize)}\n            </ul>\n            <PaginationButtons dataLength={data.length}\n                               pageSize={pageSize}\n                               pageOffset={pageOffset}\n                               currentPage={currentPage}\n                               handlePageChange={handlePageChange} />\n        </div>\n    );\n}\n\nexport default Pagination;","import './App.css';\nimport {useReducer, useEffect, useState} from \"react\";\nimport Pagination from \"./Components/Pagination\"\nimport axios from \"axios\";\n\nconst initialState = {\n    fetchUrl: \"https://api.coincap.io/v2/assets\",\n    isLoading: true,\n    errors: {},\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"LOADING\":\n            return {\n                ...state,\n                isLoading: true,\n            }\n        case \"COMPLETED\":\n            return {\n                ...state,\n                isLoading: false,\n            }\n        default:\n            return Error(\"type \" + state.type + \" is not supported\")\n    }\n}\n\nfunction App() {\n    const [state, dispatch] = useReducer(reducer, initialState)\n    const [res, setRes] = useState(null)\n\n\n    useEffect(async () => {\n        dispatch({type: \"LOADING\"})\n\n        // Fetch using state.fetchUrl\n        const config = {\n            method: 'get',\n            baseURL: 'https://api.coincap.io/v2/assets'\n        }\n        const _res = await axios.request(config)\n        setRes(_res.data);\n        dispatch({type: \"COMPLETED\"})\n    }, [state.url])\n\n\n    return (\n        <div id=\"app\">\n            <header>\n                <h1>Crypto Today</h1>\n                <small>Developed By: <a href=\"https://josenaime.github.io\" target=\"_blank\">Jose Naime</a></small>\n            </header>\n            {!state.isLoading && <Pagination data={res.data} updateDate={res.timestamp} pageSize={10} pageOffset={1} />}\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}